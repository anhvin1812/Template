@using System.Web.Optimization
@using App.Core.Permission
@model App.Services.Dtos.IdentityManagement.RoleEntry
@{
    ViewBag.Title = "Roles";
}

@section AddStyles{
    <!-- iCheck for checkboxes and radio inputs -->
    @Styles.Render("~/Areas/Admin/Scripts/iCheck/line/blue.css")
}

@section ContentHeader
{
    <section class="content-header">
        <h1>
            Roles Management
            <small>add new role</small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
            <li>Users</li>
            <li class="active">Roles</li>
        </ol>
    </section>
}
<div class="box box-primary">
    <div class="box-header with-border">
    </div><!-- /.box-header -->
    @using (Html.BeginForm("Edit", "Role", FormMethod.Post))
    {
        <div class="box-body">
            <div class="form-group">
                @Html.LabelFor(m => m.RoleName)
                @Html.TextBoxFor(m => m.RoleName, new { @class = "form-control", placeholder = "Enter role name" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Description)
                @Html.TextBoxFor(m => m.Description, new { @class = "form-control", placeholder = "Enter description" })
                @*<label for="txtDescription">Description</label>
                    <input class="form-control" id="txtDescription" placeholder="Enter description" type="text">*@
            </div>
            <div class="form-group">
                <label>Permissions</label>
                <table class="table table-hover">
                    <tbody>
                        <tr>
                            <td></td>
                            <td>Create</td>
                            <td>Read</td>
                            <td>Modify</td>
                            <td>Delete</td>
                            <td>Super</td>
                        </tr>
                        @{ int i = 0; }
                        <tr>
                            <td>Users management</td>
                            @foreach (var p in Model.RoleClaims.Where(r => r.ClaimType == ApplicationPermissionCapabilities.USER))
                            {
                                <td>
                                    <input name="RoleClaims[@i].ClaimType" type="hidden" value="@p.ClaimType" />
                                    <input name="RoleClaims[@i].ClaimValue" type="checkbox" class="flat-red" value="@p.ClaimValue" @(p.IsChecked ? "checked" : "")>
                                </td>
                                i++;
                            }
                        </tr>
                        <tr>
                            <td>News management</td>
                            @foreach (var p in Model.RoleClaims.Where(r => r.ClaimType == ApplicationPermissionCapabilities.NEWS))
                            {
                                <td>
                                    <input name="RoleClaims[@i].ClaimType" type="hidden" value="@p.ClaimType" />
                                    <input name="RoleClaims[@i].ClaimValue" type="checkbox" class="flat-red" value="@p.ClaimValue" @(p.IsChecked ? "checked" : "")>
                                </td>
                                i++;
                            }
                        </tr>

                        <tr>
                            <td>Products management</td>
                            @foreach (var p in Model.RoleClaims.Where(r => r.ClaimType == ApplicationPermissionCapabilities.PRODUCT))
                            {
                                <td>
                                    <input name="RoleClaims[@i].ClaimType" type="hidden" value="@p.ClaimType" />
                                    <input name="RoleClaims[@i].ClaimValue" type="checkbox" class="flat-red" value="@p.ClaimValue" @(p.IsChecked ? "checked" : "")>
                                </td>
                                i++;
                            }
                        </tr>
                        <tr>
                            <td>Orders management</td>
                            @foreach (var p in Model.RoleClaims.Where(r => r.ClaimType == ApplicationPermissionCapabilities.ORDER))
                            {
                                <td>
                                    <input name="RoleClaims[@i].ClaimType" type="hidden" value="@p.ClaimType" />
                                    <input name="RoleClaims[@i].ClaimValue" type="checkbox" class="flat-red" value="@p.ClaimValue" @(p.IsChecked ? "checked" : "")>
                                </td>
                                i++;
                            }
                        </tr>
                    </tbody>
                </table>
            </div>
        </div><!-- /.box-body -->
                            <div class="box-footer">
                                <button type="submit" class="btn btn-primary">Save</button>
                                <a class="btn btn-default" href="@Url.Action("Index", "Role")">Back to roles</a>
                            </div>

                            }

    <form role="form"></form><!-- /form-->
</div><!-- /.box -->


@section AddScripts{
    <!-- iCheck -->
    @Scripts.Render("~/Areas/Admin/Scripts/iCheck/icheck.min.js")

    <script>
        $(function () {
            //Flat red color scheme for iCheck
            $('input[type="checkbox"].flat-red, input[type="radio"].flat-red').iCheck({
                checkboxClass: 'icheckbox_flat-blue',
                radioClass: 'iradio_flat-blue'
            });
        });
    </script>
}

