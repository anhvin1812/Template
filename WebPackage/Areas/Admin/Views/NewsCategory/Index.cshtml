@using System.Web.Optimization
@using App.Services.Dtos.NewsManagement
@model List<App.Services.Dtos.NewsManagement.NewsCategorySummary>
@{
    ViewBag.Title = "News Categories";
}

@section AddStyles{
    @Styles.Render("~/Admin/Css/DataTable")
    <!-- Bootstrap-toggle -->
    @Styles.Render("~/Areas/Admin/Scripts/bootstrap-toggle/bootstrap-toggle.min.css")
}

@section ContentHeader
{
<section class="content-header">
    <h1>
        News Categories Management
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
        <li>News Management</li>
        <li class="active">Categories</li>
    </ol>
</section>
}

<div class="box box-primary">
    <div class="box-header with-border">
        <h3 class="box-title">
            <a class="btn btn-block btn-primary" href="@Url.Action("Create", "NewsCategory")">Add new category</a>
        </h3>
    </div>
    <!-- /.box-header -->
    <div class="box-body">
        @if (Model.Any())
        {
            var toggleAttributes = new { @class = "toggle-disable", disabled = "disabled", data_toggle = "toggle", data_onstyle = "success", data_on = "Yes", data_off = "No", data_size = "small" };

            <table class="table table-hover table-striped">
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Disabled</th>
                    <th></th>
                </tr>

                @{
                    var shownCategoryIds = new List<int>();
                    var rootCategories = Model.Where(x => x.ParentId == null).ToList();

                    for (var i = 0; i < rootCategories.Count(); i++)
                    {
                        var m = rootCategories[i];

                        <tr>
                            <td><a target="_blank" href="@Url.Action("Category","Article", new {id = m.Id, area = ""})">@m.Name</a></td>
                            <td>@m.Description</td>
                            <td>@Html.CheckBox("Disable", m.IsDisabled, toggleAttributes)</td>
                            <td>
                                <a class="btn btn-default btn-sm" href="@Url.Action("Edit", "NewsCategory", new {id = m.Id})">
                                    <i class="fa fa-fw fa-pencil"></i> Edit
                                </a>
                            </td>
                        </tr>

                        var strSubCate = "";
                        var currentParent = m;
                        while (currentParent != null)
                        {
                            var firstChild = Model.FirstOrDefault(x => x.ParentId == currentParent.Id && !shownCategoryIds.Contains(x.Id));
                            if (firstChild != null)
                            {

                                strSubCate = strSubCate + "——";
                                <tr>
                                    <td><a target="_blank" href="@Url.Action("Category","Article", new {id = m.Id, area = ""})">@Html.Raw($"{strSubCate} {firstChild.Name}")</a></td>
                                    <td>@firstChild.Description</td>
                                    <td>@Html.CheckBox("Disable", firstChild.IsDisabled, toggleAttributes)</td>
                                    <td>
                                        <a class="btn btn-default btn-sm" href="@Url.Action("Edit", "NewsCategory", new {id = firstChild.Id})">
                                            <i class="fa fa-fw fa-pencil"></i> Edit
                                        </a>
                                    </td>
                                </tr>

                                currentParent = firstChild;
                                shownCategoryIds.Add(firstChild.Id);

                            }
                            else
                            {
                                strSubCate = strSubCate.Replace("——", "");
                                currentParent = Model.FirstOrDefault(x => x.Id == currentParent.ParentId);
                            }
                        }
                    }
                }
            </table>
        }
        
    </div>
    <!-- /.box-body -->
    @*<div class="box-footer clearfix">
        <ul class="pagination no-margin pull-right">
            <li><a href="#">&laquo;</a></li>
            <li><a href="#">1</a></li>
            <li><a href="#">2</a></li>
            <li><a href="#">3</a></li>
            <li><a href="#">&raquo;</a></li>
        </ul>
    </div>*@
</div>
<!-- /.box -->


@section AddScripts{
    <!-- DataTables -->
    @Scripts.Render("~/Admin/Js/dataTable")
    <!-- Bootstrap-toggle -->
    @Scripts.Render("~/Areas/Admin/Scripts/bootstrap-toggle/bootstrap-toggle.min.js")
}

